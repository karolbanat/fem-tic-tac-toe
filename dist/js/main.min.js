"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _createForOfIteratorHelper(e,t){var r,n,o,i,a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(a)return n=!(r=!0),{s:function(){a=a.call(e)},n:function(){var e=a.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==a.return||a.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(a=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return a&&(e=a),i=0,{s:t=function(){},n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArrayLimit(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Game=_createClass(function e(t,r){var i=this;_classCallCheck(this,e),this.ties=0,this.gameCount=0,this.turnCount=0,this.init=function(e,t){var r="x"===t?"o":"x",n="singleplayer"===e?"you":"p1",o="singleplayer"===e?"cpu":"p2";"x"===t?(i.xPlayer=new Player(n,t),i.oPlayer=new("singleplayer"===e?CPUPlayer:Player)(o,r)):(i.xPlayer=new("singleplayer"===e?CPUPlayer:Player)(o,r),i.oPlayer=new Player(n,t)),i.playerQueue=[i.xPlayer,i.oPlayer],i.gameContainer.classList.remove("hidden"),i.scoreBoard.init(i.xPlayer,i.oPlayer,i.ties),i.gameBoard.init(),i.getCurrentPlayer()instanceof CPUPlayer&&i.makeMove.apply(i,_toConsumableArray(i.getCurrentPlayer().makeMove(i.gameBoard)))},this.onFieldClick=function(e){var e=e.target,t=parseInt(e.dataset.row),e=parseInt(e.dataset.column);i.makeMove(t,e)},this.getCurrentPlayerMark=function(){return i.getCurrentPlayer().getMark()},this.getCurrentPlayer=function(){return i.playerQueue[i.turnCount%2]},this.makeMove=function(e,t){var r;i.gameBoard.isFieldChecked(e,t)||(i.getCurrentPlayer()instanceof CPUPlayer&&(e=(r=_slicedToArray(i.getCurrentPlayer().makeMove(i.gameBoard),2))[0],t=r[1]),i.gameBoard.checkField(i.getCurrentPlayer().getMark(),e,t),i.increaseTurnCount(),i.gameBoard.isFull())||i.getCurrentPlayer()instanceof CPUPlayer&&i.makeMove.apply(i,_toConsumableArray(i.getCurrentPlayer().makeMove(i.gameBoard)))},this.increaseTurnCount=function(){return++i.turnCount},this.gameMenu=new GameMenu(t,this.init),this.gameMenu.init(),this.gameContainer=document.querySelector(r),this.scoreBoard=new ScoreBoard("#score-board"),this.gameBoard=new GameBoard("#game-board",this.onFieldClick,this.getCurrentPlayerMark)}),GameMenu=_createClass(function e(t,r){var n=this;_classCallCheck(this,e),this.gameInit=r,this.init=function(){n.formSubmitButtons.forEach(function(e){return e.addEventListener("click",n.handleMenuSubmitButton)})},this.handleMenuSubmitButton=function(e){var t;e.preventDefault(),n.isAnyOptionSelected()?(n.errorMsg.classList.remove("visible"),n.errorMsg.innerText="",e=e.target.dataset.mode,t=n.getCheckedOptionMark(),n.gameMenu.classList.add("hidden"),n.gameInit(e,t)):(n.errorMsg.classList.add("visible"),n.errorMsg.innerText="Please select mark for player 1")},this.isAnyOptionSelected=function(){return Array.from(n.formOptions).some(function(e){return e.checked})},this.getCheckedOptionMark=function(){var e,t=_createForOfIteratorHelper(n.formOptions);try{for(t.s();!(e=t.n()).done;){var r=e.value;if(r.checked)return r.dataset.mark}}catch(e){t.e(e)}finally{t.f()}return""},this.gameMenu=document.querySelector(t),this.menuForm=this.gameMenu.querySelector("form"),this.formOptions=this.menuForm.querySelectorAll('input[type="radio"]'),this.errorMsg=this.menuForm.querySelector('[role="alert"]'),this.formSubmitButtons=this.menuForm.querySelectorAll('button[type="submit"]')}),ScoreBoard=_createClass(function e(t){var n=this;_classCallCheck(this,e),this.init=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;n.p1Label.innerText=e.toString(),n.p2Label.innerText=t.toString(),n.updateScore(e,t,r)},this.updateScore=function(e,t,r){n.p1Score.innerText=e.getScore().toString(),n.p2Score.innerText=t.getScore().toString(),n.tiesScore.innerText=r.toString()},this.scoreBoardContainer=document.querySelector(t),this.p1Label=this.scoreBoardContainer.querySelector("#p1-game-name"),this.p1Score=this.scoreBoardContainer.querySelector("#p1-game-score"),this.p2Label=this.scoreBoardContainer.querySelector("#p2-game-name"),this.p2Score=this.scoreBoardContainer.querySelector("#p2-game-score"),this.tiesScore=this.scoreBoardContainer.querySelector("#game-ties")}),GameBoard=_createClass(function e(t,r,n){var o=this;_classCallCheck(this,e),this.onFieldClick=r,this.getCurrentMark=n,this.BOARD_SIZE=3,this.board=[[],[],[]],this.init=function(){for(var e=o.boardElement.querySelectorAll(".game-board__field"),t=0;t<o.board.length;t++)for(var r=0;r<o.BOARD_SIZE;r++)o.board[t].push(new Field(t,r,e[r+t*o.BOARD_SIZE],o.onFieldClick,o.getCurrentMark))},this.checkField=function(e,t,r){t<o.board.length&&r<o.board[0].length&&o.board[t][r].check(e)},this.isFieldChecked=function(e,t){return o.board[e][t].isChecked()},this.isFull=function(){return o.board.flat().every(function(e){return e.isChecked()})},this.boardElement=document.querySelector(t)}),Field=_createClass(function e(t,r,n,o,i){var a=this;_classCallCheck(this,e),this.row=t,this.column=r,this.fieldElement=n,this.gameOnClickHandler=o,this.getCurrentMark=i,this.mark=null,this.handleHover=function(){var e=a.getCurrentMark();a.fieldElement.setAttribute("data-current-player",e)},this.handleBlur=function(){a.fieldElement.removeAttribute("data-current-player")},this.insertImages=function(){var e=document.createElement("img"),t=(e.setAttribute("src","./dist/assets/icon-o.svg"),e.setAttribute("alt",""),e.setAttribute("data-name","o-icon"),document.createElement("img")),r=(t.setAttribute("src","./dist/assets/icon-o-outline.svg"),t.setAttribute("alt",""),t.setAttribute("data-name","o-outline-icon"),document.createElement("img")),n=(r.setAttribute("src","./dist/assets/icon-x.svg"),r.setAttribute("alt",""),r.setAttribute("data-name","x-icon"),document.createElement("img"));n.setAttribute("src","./dist/assets/icon-x-outline.svg"),n.setAttribute("alt",""),n.setAttribute("data-name","x-outline-icon"),a.fieldElement.appendChild(e),a.fieldElement.appendChild(r),a.fieldElement.appendChild(t),a.fieldElement.appendChild(n)},this.check=function(e){a.mark=e,a.fieldElement.setAttribute("aria-label","Row ".concat(a.row+1,", column ").concat(a.column+1,", ").concat(a.mark," mark")),a.fieldElement.setAttribute("data-mark",e)},this.isChecked=function(){return null!==a.mark},this.getMark=function(){return a.mark},this.fieldElement&&(this.fieldElement.addEventListener("click",this.gameOnClickHandler),this.fieldElement.addEventListener("mouseover",this.handleHover),this.fieldElement.addEventListener("focusin",this.handleHover),this.fieldElement.addEventListener("mouseout",this.handleBlur),this.fieldElement.addEventListener("focusout",this.handleBlur),this.fieldElement.dataset.row=this.row.toString(),this.fieldElement.dataset.column=this.column.toString(),this.fieldElement.setAttribute("aria-label","Row ".concat(this.row+1,", column ").concat(this.column+1,", empty field")),this.insertImages())}),Player=_createClass(function e(t,r){var n=this,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;_classCallCheck(this,e),this.name=t,this.mark=r,this.score=o,this.toString=function(){return"".concat(n.mark," (").concat(n.name,")")},this.getMark=function(){return n.mark},this.getScore=function(){return n.score},this.updateScore=function(){return++n.score}}),CPUPlayer=function(){_inherits(r,Player);var t=_createSuper(r);function r(){var e;return _classCallCheck(this,r),(e=t.apply(this,arguments)).makeMove=function(e){for(var t,r,n=e.BOARD_SIZE;t=Math.floor(Math.random()*n),r=Math.floor(Math.random()*n),e.isFieldChecked(t,r););return[t,r]},e}return _createClass(r)}(),ticTacToeGame=new Game("#game-menu","#tic-tac-toe-game");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
