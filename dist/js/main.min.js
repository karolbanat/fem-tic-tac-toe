"use strict";function _createForOfIteratorHelper(e,r){var t,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(t=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return t=e.done,e},e:function(e){n=!0,o=e},f:function(){try{t||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||r&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:r=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:r};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){var t;if(e)return"string"==typeof e?_arrayLikeToArray(e,r):"Map"===(t="Object"===(t=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:t)||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function _defineProperties(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var gameMenu=document.querySelector("#game-menu"),gameMenuForm=gameMenu.querySelector(".game-menu-form"),menuFormOptions=gameMenuForm.querySelectorAll('input[type="radio"]'),menuErrorMsg=gameMenuForm.querySelector('[role="alert"]'),menuFormSubmitButtons=document.querySelectorAll('button[type="submit"]'),ticTacToeGameView=document.querySelector("#tic-tac-toe-game"),p1NameElement=document.querySelector("#p1-game-name"),p1ScoreElement=document.querySelector("#p1-game-score"),p2NameElement=document.querySelector("#p2-game-name"),p2ScoreElement=document.querySelector("#p2-game-score"),tiesScoreElement=document.querySelector("#game-ties"),Game=_createClass(function e(){var o=this;_classCallCheck(this,e),this.ties=0,this.init=function(e,r){var t="x"===r?"o":"x",n="singleplayer"===e?"you":"p1",e="singleplayer"===e?"cpu":"p2";"x"===r?(o.xPlayer=new Player(n,r),o.oPlayer=new Player(e,t)):(o.xPlayer=new Player(e,t),o.oPlayer=new Player(n,r)),initializeScoreBoard(o.xPlayer,o.oPlayer,o.ties)}}),Player=_createClass(function e(r,t){var n=this,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;_classCallCheck(this,e),this.name=r,this.mark=t,this.score=o,this.toString=function(){return"".concat(n.mark," (").concat(n.name,")")},this.getMark=function(){return n.mark},this.getScore=function(){return n.score},this.updateScore=function(){return++n.score}}),ticTacToeGame=new Game,initializeScoreBoard=function(e,r,t){p1NameElement.innerText=e.toString(),p1ScoreElement.innerText=e.getScore().toString(),p2NameElement.innerText=r.toString(),p2ScoreElement.innerText=r.getScore().toString(),tiesScoreElement.innerText=t.toString()},isAnyOptionChecked=function(){return Array.from(menuFormOptions).some(function(e){return e.checked})},getCheckedOptionMark=function(){var e,r=_createForOfIteratorHelper(menuFormOptions);try{for(r.s();!(e=r.n()).done;){var t=e.value;if(t.checked)return t.dataset.mark}}catch(e){r.e(e)}finally{r.f()}return""},handleMenuSubmitButton=function(e){var r;e.preventDefault(),isAnyOptionChecked()?(menuErrorMsg.classList.remove("visible"),menuErrorMsg.innerText="",e=e.target.dataset.mode,r=getCheckedOptionMark(),gameMenu.classList.add("hidden"),ticTacToeGameView.classList.remove("hidden"),ticTacToeGame.init(e,r)):(menuErrorMsg.classList.add("visible"),menuErrorMsg.innerText="Please select mark for player 1")};menuFormSubmitButtons.forEach(function(e){return e.addEventListener("click",handleMenuSubmitButton)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
